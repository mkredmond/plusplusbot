{
  "_args": [
    [
      {
        "raw": "giphy-api@^1.2.7",
        "scope": null,
        "escapedName": "giphy-api",
        "name": "giphy-api",
        "rawSpec": "^1.2.7",
        "spec": ">=1.2.7 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\Mike\\Documents\\dev\\github\\plusplusbot"
    ]
  ],
  "_from": "giphy-api@>=1.2.7 <2.0.0",
  "_id": "giphy-api@1.2.7",
  "_inCache": true,
  "_location": "/giphy-api",
  "_nodeVersion": "7.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/giphy-api-1.2.7.tgz_1502806581239_0.24862642446532845"
  },
  "_npmUser": {
    "name": "austinkelleher",
    "email": "austin.kell47@gmail.com"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "giphy-api@^1.2.7",
    "scope": null,
    "escapedName": "giphy-api",
    "name": "giphy-api",
    "rawSpec": "^1.2.7",
    "spec": ">=1.2.7 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/giphy-api/-/giphy-api-1.2.7.tgz",
  "_shasum": "82bede451053675b1c98b6340711b789579a03bd",
  "_shrinkwrap": null,
  "_spec": "giphy-api@^1.2.7",
  "_where": "C:\\Users\\Mike\\Documents\\dev\\github\\plusplusbot",
  "author": {
    "name": "Austin Kelleher, a@alk.im"
  },
  "browser": {
    "./util/http.js": "./util/http_browser.js"
  },
  "bugs": {
    "url": "https://github.com/austinkelleher/giphy-api/issues"
  },
  "dependencies": {},
  "description": "JavaScript module for the giphy.com API that supports promises and callbacks.",
  "devDependencies": {
    "browserify": "^14.2.0",
    "chai": "^4.0.2",
    "eslint-config-semistandard": "^11.0.0",
    "mocha": "^3.2.0",
    "sinon": "^3.1.0",
    "standard": "^10.0.0",
    "uglify-js": "^3.0.0"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "82bede451053675b1c98b6340711b789579a03bd",
    "tarball": "https://registry.npmjs.org/giphy-api/-/giphy-api-1.2.7.tgz"
  },
  "gitHead": "90a87b8ba4f6bd7039850509420cb41520aa6ace",
  "homepage": "https://github.com/austinkelleher/giphy-api",
  "keywords": [
    "giphy",
    "gif",
    "api"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "austinkelleher",
      "email": "austin.kell47@gmail.com"
    },
    {
      "name": "xdumaine",
      "email": "xander.dumaine@gmail.com"
    }
  ],
  "name": "giphy-api",
  "optionalDependencies": {},
  "readme": "giphy-api\n===========\n[![Build Status](https://travis-ci.org/austinkelleher/giphy-api.svg)](https://travis-ci.org/austinkelleher/giphy-api)\n![NPM version](https://badge.fury.io/js/giphy-api.svg)\n\nJavaScript module for the [giphy.com](http://giphy.com) API that\nsupports **promises and callbacks**. All search parameters and endpoints can be\nfound on the [Giphy API documentation](https://developers.giphy.com/docs/).\n\n## Installation\n```bash\nnpm install giphy-api --save\n```\n\n# Browser build\nJavaScript browser bundles are built to `dist/giphy-api.bundle.js` and\n`dist/giphy-api.bundle.min.js` using:\n\n```bash\nnpm run build\n```\n\n## Requiring\n```javascript\n// Require with custom API key\nvar giphy = require('giphy-api')('API KEY HERE');\n// Require with the public beta key\nvar giphy = require('giphy-api')();\n```\n\n## Initialization Options\n\n```javascript\nvar giphy = require('giphy-api')({\n    ...\n});\n```\n\n- https {Boolean} - Whether to utilize HTTPS library for requests or HTTP. Defaults to HTTP.\n- timeout {Number} - Maximum timeout of an API request. Defaults to 30 seconds.\n- apiKey {String} - Giphy API key. Defaults to API beta key\n\n## [Phrase search](https://developers.giphy.com/docs/#operation--gifs-search-get)\nSearch all Giphy GIFs for a word or phrase. Supported parameters:\n- q - search query term or phrase\n- limit - (optional) number of results to return, maximum 100. Default 25.\n- offset - (optional) results offset, defaults to 0.\n- rating - limit results to those rated (y,g, pg, pg-13 or r).\n- fmt - (optional) return results in html or json format (useful for viewing responses as GIFs to debug/test)\n\n```javascript\n// Search with a plain string using callback\ngiphy.search('pokemon', function (err, res) {\n    // Res contains gif data!\n});\n\n// Search with options using promise\ngiphy.search('pokemon').then(function (res) {\n    // Res contains gif data!\n});\n```\n```javascript\n// Search with options using callback\ngiphy.search({\n    q: 'pokemon',\n    rating: 'g'\n}, function (err, res) {\n    // Res contains gif data!\n});\n```\n\n## [Giphy Id search](https://developers.giphy.com/docs/#path--gifs)\nSearch all Giphy gifs for a single Id or an array of Id's\n\n```javascript\n//Search with a single Id using callback\ngiphy.id('feqkVgjJpYtjy', function (err, res) {\n\n});\n\n//Search with a single Id using promise\ngiphy.id('feqkVgjJpYtjy').then(function (res) {\n\n});\n```\n```javascript\n// Search with an array of Id's\ngiphy.id([\n    'feqkVgjJpYtjy',\n    '7rzbxdu0ZEXLy'\n], function (err, res) {\n\n});\n```\n\n## [Translate search](https://developers.giphy.com/docs/#path--gifs-translate)\nExperimental search endpoint for gif dialects. Supported parameters:\n- s - term or phrase to translate into a GIF\n- rating - limit results to those rated (y,g, pg, pg-13 or r).\n- fmt - (optional) return results in html or json format (useful for viewing responses as GIFs to debug/test)\n\n```javascript\n// Translate search with a plain string using callback\ngiphy.translate('superman', function (err, res) {\n\n});\n\n// Translate search with a plain string using promise\ngiphy.translate('superman').then(function (res) {\n\n});\n```\n```javascript\n// Translate search with options\ngiphy.translate({\n    s: 'superman',\n    rating: 'g',\n    fmt: 'html'\n}, function (err, res) {\n\n});\n```\n\n## [Random](https://developers.giphy.com/docs/#path--gifs-random)\nRandom gif(s) filtered by tag. Supported parameters:\n- tag - the GIF tag to limit randomness by\n- rating - limit results to those rated (y,g, pg, pg-13 or r).\n- fmt - (optional) return results in html or json format (useful for viewing responses as GIFs to debug/test)\n\n```javascript\n// Random gif by tag using callback\ngiphy.random('superman', function (err, res) {\n\n});\n\n// Random gif by tag using promise\ngiphy.random('superman').then(function (res) {\n\n});\n```\n```javascript\n// Random gif with options\ngiphy.random({\n    tag: 'superman',\n    rating: 'g',\n    fmt: 'json'\n}, function (err, res) {\n\n});\n```\n\n## [Trending](https://developers.giphy.com/docs/#path--gifs-trending)\nTrending gifs on [The Hot 100](http://giphy.com/hot100) list\n- limit (optional) limits the number of results returned. By default returns 25 results.\n- rating - limit results to those rated (y,g, pg, pg-13 or r).\n- fmt - (optional) return results in html or json format (useful for viewing responses as GIFs to debug/test)\n\n```javascript\n// Trending Hot 100 gifs using callback\ngiphy.trending(function (err, res) {\n\n});\n\n// Trending Hot 100 gifs using promise\ngiphy.trending().then(function (res) {\n\n});\n```\n```javascript\n// Trending Hot 100 gifs with options\ngiphy.trending({\n    limit: 2,\n    rating: 'g',\n    fmt: 'json'\n}, function (err, res) {\n\n});\n```\n\n## [Stickers](https://developers.giphy.com/docs/#giphy-sticker-api)\n[Animated stickers](https://giphy.com/stickers) are gifs with transparent backgrounds. All giphy-api functions\nsupport stickers **except id**, which is not a supported Giphy sticker endpoint.\nIn order to use the sticker API instead of the gif API, simply pass the ```api```\nproperty to a giphy-api function.\n```javascript\n// Sticker search using callback\ngiphy.search({\n    api: 'stickers',\n    q: 'funny'\n}, function (err, res) {\n\n});\n\n// Sticker search using promise\ngiphy.search({\n    api: 'stickers',\n    q: 'funny'\n}).then(res) {\n\n});\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/austinkelleher/giphy-api.git"
  },
  "scripts": {
    "build": "./node_modules/browserify/bin/cmd.js index.js --standalone GiphyAPI > dist/giphy-api.bundle.js && ./node_modules/uglify-js/bin/uglifyjs dist/giphy-api.bundle.js --compress --output dist/giphy-api.bundle.min.js",
    "prepublish": "npm run build",
    "test": "mocha --ui bdd --reporter spec ./test"
  },
  "version": "1.2.7"
}
