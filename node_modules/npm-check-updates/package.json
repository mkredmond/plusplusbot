{
  "_args": [
    [
      {
        "raw": "npm-check-updates@^2.13.0",
        "scope": null,
        "escapedName": "npm-check-updates",
        "name": "npm-check-updates",
        "rawSpec": "^2.13.0",
        "spec": ">=2.13.0 <3.0.0",
        "type": "range"
      },
      "C:\\Users\\Mike\\Documents\\dev\\github\\plusplusbot"
    ]
  ],
  "_from": "npm-check-updates@>=2.13.0 <3.0.0",
  "_id": "npm-check-updates@2.14.2",
  "_inCache": true,
  "_location": "/npm-check-updates",
  "_nodeVersion": "8.9.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/npm-check-updates_2.14.2_1524521124761_0.608501739512918"
  },
  "_npmUser": {
    "name": "raine",
    "email": "raineorshine@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {
    "escape-string-regexp": "1.0.5",
    "has-ansi": "2.0.0"
  },
  "_requested": {
    "raw": "npm-check-updates@^2.13.0",
    "scope": null,
    "escapedName": "npm-check-updates",
    "name": "npm-check-updates",
    "rawSpec": "^2.13.0",
    "spec": ">=2.13.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/npm-check-updates/-/npm-check-updates-2.14.2.tgz",
  "_shasum": "1adb0d5fa48be8a6243cf335c7a2d6bbb0356e87",
  "_shrinkwrap": null,
  "_spec": "npm-check-updates@^2.13.0",
  "_where": "C:\\Users\\Mike\\Documents\\dev\\github\\plusplusbot",
  "author": {
    "name": "Tomas Junnonen",
    "email": "tomas1@gmail.com"
  },
  "bin": {
    "npm-check-updates": "./bin/npm-check-updates",
    "ncu": "./bin/ncu"
  },
  "bugs": {
    "url": "https://github.com/tjunnone/npm-check-updates/issues"
  },
  "contributors": [
    {
      "name": "Raine Revere",
      "url": "https://github.com/raineorshine"
    }
  ],
  "dependencies": {
    "bluebird": "^3.4.3",
    "chalk": "^1.1.3",
    "cint": "^8.2.1",
    "cli-table": "^0.3.1",
    "commander": "^2.9.0",
    "fast-diff": "^1.0.1",
    "find-up": "1.1.2",
    "get-stdin": "^5.0.1",
    "json-parse-helpfulerror": "^1.0.3",
    "lodash": "^4.15.0",
    "node-alias": "^1.0.4",
    "npm": "^3.10.6",
    "npmi": "^2.0.1",
    "rc-config-loader": "^2.0.1",
    "semver": "^5.3.0",
    "semver-utils": "^1.1.1",
    "spawn-please": "^0.3.0",
    "update-notifier": "^2.2.0"
  },
  "description": "Find newer versions of dependencies than what your package.json or bower.json allows",
  "devDependencies": {
    "chai": "^3.5.0",
    "chai-as-promised": "^6.0.0",
    "chai-string": "^1.2.0",
    "chokidar-cli": "^1.2.0",
    "eslint": "^4.0.0",
    "mocha": "^3.0.2",
    "should": "^11.1.0",
    "snyk": "^1.25.1",
    "tmp": "0.0.31"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-kyrLnGIImPb4WK/S/4AgsxKZ21ztC9KP+6aNTZN31cGJm4+GyH+aNq7ASvvJQO3iOdg/c60qLdZVtLTOn4l0gQ==",
    "shasum": "1adb0d5fa48be8a6243cf335c7a2d6bbb0356e87",
    "tarball": "https://registry.npmjs.org/npm-check-updates/-/npm-check-updates-2.14.2.tgz",
    "fileCount": 13,
    "unpackedSize": 65067,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa3lioCRA9TVsSAnZWagAAZJYP/2Oip0/caksZMOIm/FMj\nBNSE6p3OKPaMkPsNwEn0bkk+IOYEDEUBMLRxO0oaCrNVpnLsNw7o508SdfzI\noSughxD+vZtaNtLU+LPWMUhdyh/8rhkDdAv92c69M3hkGX9EG12b6Nru0jxR\nyHAyn1fsXwI0I8WynSiu7wQLDYqIx0WCWnSXVtOmK/JbRTUc9nLg2iX2Rv+z\nGnDUVqrqsWLuMM1bOdquURp6R/MlRV6UxfANbULS60Z5Xpjr9/X/kdZSyDrB\nYrNRsrbc9Lt8fiRjchZnx+wxtmECc1XuwRjHT93nAmqoyhbEPGv7PKEJAGNE\nI0s8gnUkzKx6Kle9u0+yKoqNbmQeZb6O4BXEFGq/f/kSElz6vZLNSN3lIQ6w\nq7UsFu3xmDqz6bhIw7kKrMWVFqtoSrjdCM/QfidoT20UyJHUJXLb5CIN8mKr\nfEqdouYwsl2OSBhBjNpm9aAOsSMmfc7YhILN/M+769oNkAgkRGGWkF9U5iO+\nBqEPhUZqiXIJkLCVx/u71WCi9RPmDJXnKRW09HK5MTjkR9Q6h5j37OuIoG9F\nWjuaX7ipP+iT6FrfeKYhMC3QHXKHuOSJ/ieydSjHFNiGDFPGJUlJ7YIQqzFr\nx5kW4A2pZK7iH3IjoZSgYF8O1pwkbGpc/mDxd4g0dQ9F0lYIL+kr2TmgAtCN\nU6RB\r\n=BLds\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "dynamicDependencies": {
    "bower": "^1.6.5"
  },
  "engines": {
    "node": ">=0.12"
  },
  "files": [
    "bin",
    "lib"
  ],
  "gitHead": "621dbd50e53677c16033b446d5d1e22bc71e409a",
  "homepage": "https://github.com/tjunnone/npm-check-updates",
  "keywords": [
    "npm",
    "bower",
    "check",
    "find",
    "discover",
    "updates",
    "upgrades",
    "dependencies",
    "package.json",
    "bower.json",
    "updater",
    "version",
    "management",
    "ncu"
  ],
  "license": "Apache-2.0",
  "main": "./lib/npm-check-updates",
  "maintainers": [
    {
      "name": "raine",
      "email": "raineorshine@gmail.com"
    },
    {
      "name": "tjunnone",
      "email": "tomas1@gmail.com"
    }
  ],
  "name": "npm-check-updates",
  "optionalDependencies": {},
  "preferGlobal": true,
  "readme": "[![npm](https://badge.fury.io/js/npm-check-updates.svg)](http://badge.fury.io/js/npm-check-updates)\n[![Build Status](https://travis-ci.org/tjunnone/npm-check-updates.svg?branch=master)](https://travis-ci.org/tjunnone/npm-check-updates)\n![npm (@next)](https://img.shields.io/npm/v/npm-check-updates/next.svg)\n\nnpm-check-updates allows you to upgrade your package.json dependencies to the latest versions, regardless of existing version constraints.\n\nnpm-check-updates maintains your existing semantic versioning *policies*, i.e., it will upgrade your `\"express\": \"^4.0.0\"` dependency to `\"express\": \"^5.0.0\"` (which npm will).\n\n![npm-check-updates-screenshot](https://cloud.githubusercontent.com/assets/750276/8864534/0788a4d8-3171-11e5-9881-8f7dcf634d14.png)\n\n![Question](http://www.virginmobileusa.com/_img/2012/icon-questionmark-small.gif) Having issues? Check out [known issues](#known-issues) first. Then check the [issues page](https://github.com/tjunnone/npm-check-updates/issues).\n\nInstallation\n--------------\n\n```sh\nnpm install -g npm-check-updates\n```\n\nUsage\n--------------\nShow any new dependencies for the project in the current directory:\n\n```sh\n$ ncu\n\n express           4.12.x  →   4.13.x\n multer            ^0.1.8  →   ^1.0.1\n react-bootstrap  ^0.22.6  →  ^0.24.0\n react-a11y        ^0.1.1  →   ^0.2.6\n webpack          ~1.9.10  →  ~1.10.5\n\nRun with -u to upgrade your package.json\n```\n\nUpgrade a project's package file:\n\n> **Make sure your package file is in version control and all changes have been committed. This *will* overwrite your package file.**\n\n```sh\n$ ncu -u\n\n express           4.12.x  →   4.13.x\n\npackage.json upgraded\n```\n\nWorks with bower:\n```sh\n$ ncu -m bower     # will use bower.json and check versions in bower\n```\n\nYou can include or exclude specific packages using the `--filter` and `--reject` options. They accept strings, comma-delimited lists, or regular expressions:\n\n```sh\n# match mocha and should packages exactly\n$ ncu mocha             # shorthand for ncu -f mocha (or --filter)\n$ ncu one, two, three\n\n# exclude packages\n$ ncu -x nodemon        # shorthand for ncu --reject nodemon\n\n# match packages that start with \"gulp-\" using regex\n$ ncu '/^gulp-.*$/'\n\n# match packages that do not start with \"gulp-\". Note: single quotes are required\n# here to avoid inadvertent bash parsing\n$ ncu '/^(?!gulp-).*$/'\n```\n\nOptions\n--------------\n    -f, --filter             include only package names matching the given string,\n                             comma-delimited list, or regex\n    -g, --global             check global packages instead of in the current project\n    -h, --help               output usage information\n    -m, --packageManager     npm or bower (default: npm)\n    -r, --registry           specify third-party NPM registry\n    -u, --upgrade            overwrite package file\n    -x, --reject             exclude packages matching the given string, comma-\n                             delimited list, or regex\n    -V, --version            output the version number\n\nAdvanced Options\n--------------\n\nDo not use these unless you know what you are doing! Not needed for typical usage.\n\n    -d, --dev                check only devDependencies\n    -e, --error-level        set the error-level. 1: exits with error code 0 if no\n                             errors occur. 2: exits with error code 0 if no\n                             packages need updating (useful for continuous\n                             integration)\n    -j, --jsonAll            output new package file instead of human-readable\n                             message\n    --jsonUpgraded           output upgraded dependencies in json\n    -l, --loglevel           what level of logs to report: silent, error, warn,\n                             info, verbose, silly (default: warn)\n    -p, --prod               check only dependencies (not devDependencies)\n    --packageData            include stringified package file (use stdin instead)\n    --packageFile            package file location (default: ./package.json)\n    --packageFileDir         use same directory as packageFile to compare against\n                             installed modules. See #201.\n    --configFilePath         rc config file path (default: ./)\n    --configFileName         rc config file name (default: .ncurc.{json,yml,js})                             \n    -n, --newest             find the newest published versions available instead\n                             of the latest stable versions\n    -o, --optional           check only optionalDependencies\n    --peer                   check only peerDependencies\n    -s, --silent             don't output anything (--loglevel silent)\n    --semverLevel            find the highest version within \"major\" or \"minor\"\n    -t, --greatest           find the highest versions available instead of the\n                             latest stable versions\n    -a, --upgradeAll         include even those dependencies whose latest\n                             version satisfies the declared semver dependency\n    --removeRange            remove version ranges from the final package version\n    --timeout                a global timeout in ms\n\nConfiguration Files\n--------------\nUse a `.ncurc.{json,yml,js}` file to specify configuration information.\nYou can specify file name and path using `--configFileName` and `--configFilePath`\ncommand line options.\n\nIntegration\n--------------\nThe tool allows integration with 3rd party code:\n\n```js\nconst ncu = require('npm-check-updates');\n\nncu.run({\n    // Always specify the path to the package file\n    packageFile: 'package.json',\n    // Any command-line option can be specified here.\n    // These are set by default:\n    silent: true,\n    jsonUpgraded: true\n}).then((upgraded) => {\n    console.log('dependencies to upgrade:', upgraded);\n});\n```\n\nHow dependency updates are determined\n--------------\n\n- Direct dependencies will be increased to the latest stable version:\n  - `2.0.1` → `2.2.0`\n  - `1.2` → `1.3`\n  - `0.1.0` → `1.0.1`\n  - with `--semverLevel major`\n    - `0.1.0` → `0.2.1`\n  - with `--semverLevel minor`\n    - `0.1.0` → `0.1.2`\n-  Semantic versioning policies for levels are maintained while satisfying the latest version:\n  - `^1.2.0` → `^2.0.0`\n  - `1.x` → `2.x`\n- \"Any version\" is maintained:\n  - `*` → `*`\n- \"Greater than\" is maintained:\n  - `>0.2.0` → `>0.3.0`\n- Closed ranges are replaced with a wildcard:\n  - `1.0.0 < 2.0.0` → `^3.0.0`\n\nWhy is it not updating ^1.0.0 to ^1.0.1 when 1.0.1 is the latest?\n--------------\n`^1.0.0` is a *range* that will includes all non-major updates. If you run `npm update`, it will install `1.0.1` without changing the dependency listed in your package file. You don't need to update your package file if the latest version is satisfied by the specified dependency range. If you *really* want to upgrade your package file (even though it's not necessary), you can run `ncu --upgradeAll`.\n\nDocker\n------\n\nDocker volumes can be used to easily update a package:\n\n```bash\ndocker run -it --rm -v $(pwd)/package.json:/app/package.json creack/ncu -u -a\n```\n\nKnown Issues\n--------------\n\nBelow you will find the most common known issues. Otherwise search the [issues page](https://github.com/tjunnone/npm-check-updates/issues).\n\n- `no such file or directory, rename`. `ncu` is awaiting a major version upgrade for it to be compatible with the latest version of `npm`. See [#420](https://github.com/tjunnone/npm-check-updates/issues/420). TLDR; `npm uninstall -g npm-check-updates && npm install -g npm-check-updates@next`\n\n- `Cannot find module 'X'`. Cannot reproduce. TLDR; Seems to be fixed by fresh installs of node and npm. See [#144](https://github.com/tjunnone/npm-check-updates/issues/144#issuecomment-148499121).\n\n- Windows: If npm-check-updates hangs, run `ncu --loglevel verbose` to see if it is waiting for stdin. If so, try setting the package file explicitly: `ncu -g --packageFile package.json`. See [#136](https://github.com/tjunnone/npm-check-updates/issues/136#issuecomment-155721102).\n\nDevelopment Notes\n--------------\n\nRunning `ncu` on `ncu` itself is admittedly appealing, but the following dependencies should *not* be upgraded as they have breaking changes that are currently untenable to fix. This is internal to npm-check-updates. You are welcome to use and upgrade these dependencies in your project.\n\n- `\"find-up\": \"1.1.2\"`\n- `\"chai\": \"^3.5.0\"`\n- `\"chai-as-promised\": \"^6.0.0\"`\n\n\nProblems?\n--------------\n\nPlease [file an issue](https://github.com/tjunnone/npm-check-updates/issues)! But always [search existing issues](https://github.com/tjunnone/npm-check-updates/issues?utf8=%E2%9C%93&q=is%3Aissue) first!\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tjunnone/npm-check-updates.git"
  },
  "scripts": {
    "lint": "eslint bin lib test",
    "test": "npm run lint ; mocha && mocha test/individual",
    "watch": "chokidar \"lib/**/*.js\" -c \"npm run test\""
  },
  "version": "2.14.2"
}
